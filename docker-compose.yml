services:
  db:
    image: mysql:8
    container_name: db
    networks:
      - web
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: app_db
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/mysql
      
  php:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: php
    networks:
      - web
    volumes:
      - ./backend:/var/www/html

    depends_on:
      - db
      - redis
    environment:
      DB_HOST: db
      DB_DATABASE: app_db
      DB_USERNAME: root
      DB_PASSWORD: secret

  nginx:
    image: nginx:alpine
    container_name: nginx
    networks:
      - web
    ports:
      - "80:80"
    depends_on:
      - php
    volumes:
      - ./backend:/var/www/html
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf

  python:
    build:
      context: ./python
      dockerfile: Dockerfile
    container_name: python
    networks:
      - web
    volumes:
      - ./python:/app
    depends_on:
      - redis
    command: ["python3", "main.py"]

  redis:
    image: redis:7
    container_name: redis
    networks:
      - web
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    networks:
      - web
    environment:
      PMA_HOST: db
    ports:
      - "8090:80"

volumes:
  redis_data:
  db_data:
    driver: local

networks:
  web:
    driver: bridge